<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
  	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int-ftp="http://www.springframework.org/schema/integration/ftp"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx.xsd 
    http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/integration/ftp
    http://www.springframework.org/schema/integration/ftp/spring-integration-ftp.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd">

	<bean id="hboProperties" 
      class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name = "locations">
			<list>
				<value>classpath:database.properties</value>
			</list> 
		</property>
	</bean>

	<batch:job id="TigouneHboBatch" restartable="true">
		<batch:step id="step1">
			<batch:tasklet transaction-manager="transactionManager" allow-start-if-complete="true" start-limit="3">
				<batch:chunk reader="multiResourceItemReader" writer="CustomHibernateItemWriter"
        			 processor="processor" commit-interval="1">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="multiResourceItemReader" class="org.springframework.batch.item.file.MultiResourceItemReader" scope="step" >
		<property name="resources" value="classpath:messages/*.xml" />
		<property name="delegate" ref="xmlItemReader" />
		<property name="saveState" value="false"/>
		<property name="strict" value="false"/>
	</bean>
	
	<bean id="xmlItemReader"
        class="org.springframework.batch.item.xml.StaxEventItemReader" scope="step">
		<property name="fragmentRootElementName" value="metadata" />
		<property name="unmarshaller" ref="ordenUnmarshaller" />
		<property name="saveState" value="false"/>
		<property name="strict" value="false"/>
	</bean>

	<!-- Read and map values to object, via jaxb2 -->
	<bean id="ordenUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>		
				<value>com.tigoune.hbo.model.metadata.Metadata</value>
			</list>
		</property>
	</bean>  

	<bean id="processor" class="org.springframework.batch.item.support.CompositeItemProcessor">
		<property name="delegates">
			<list>
				<ref bean="HboContentProcessor" />
			 	<!--  <ref bean="resizedImageProcessor" /> -->
			</list>
		</property>
	</bean>

	<!-- store jobs in memory -->
	<bean id="jobRepository"
	class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	 
	<bean id="jobLauncher"
	class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	
	<bean id="CustomHibernateItemWriter" class="com.tigoune.hbo.writer.CustomHibernateItemWriter">
		<property name="contentService" ref="ContentService"/>
	</bean>
	
	<bean id="ContentService" class="com.tigoune.hbo.service.ContentService">
		<property name="contentRepository" ref="contentRepository"/>
		<property name="maxRetries" value="2"/>
		<property name="retryInterval" value="5000"/>
	</bean>
	
	<bean id="fileBackupTasklet" class="com.tigoune.hbo.tasklet.FileBackupTasklet" >
		<property name="sourceDirectory" value="src/test/resources/messages/input/" />
		<property name="destDirectory" value="src/test/resources/messages/bck/" />
		<property name="storage" ref="fileStorage" />
		<property name="backupExt" value=".bck" />
		<property name="fileHelper" ref="fileHelper" />
		<property name="dateFormatPattern" value="yyyyMMddHHmmssmm" />
	</bean>
	
	
	<bean id="fileHelper" class="com.tigoune.hbo.helper.FileHelper" scope="singleton">
		<property name="fileNamePattern" value=".xml" />
	</bean>

	<bean id="HboContentProcessor" class="com.tigoune.hbo.processor.HboContentProcessor" scope="prototype">
		<property name="metadataToContentMapper" ref="metadataToContentMapper"/>
	</bean>
	
	<bean id="resizedImageProcessor" class="com.tigoune.hbo.processor.ResizeImageProcessor" scope="prototype">
		<property name="storage" ref="fileStorage"/>
		<property name="cloudFrontUri" value="http://localhost"/>
	</bean>
	
	<bean id="metadataToContentMapper" class="com.tigoune.hbo.mapper.MovieContentMapper" />
	
	<bean id="fileStorage" class="com.tigoune.hbo.storage.FileStorage">
		<property name="fileHelper" ref="fileHelper" />
	</bean>
	
	<bean id="contentRepository" class="com.tigoune.hbo.repository.ContentRepository">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${jdbc.JobUrl}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="hibernateDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="${jdbc.ContentUrl}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- configure H2 database connection -->
	<bean id="h2dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:hbo_content;DB_CLOSE_DELAY=-1" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
		<property name="dataSource" ref="h2dataSource"/>
		<property name="packagesToScan">
			<list>
				<value>com.tigoune.hbo.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop> 
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>   
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean> 

	<bean id="batchTransactionManager"
	class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	 <!-- Spring should auto load this bean -->
    <bean class="org.springframework.batch.test.JobLauncherTestUtils"/>
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="h2dataSource"/>
    </bean>    

</beans>